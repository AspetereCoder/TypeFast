body {
  background-color: #080808;
}

* {
  font-family: Roboto, sans-serif;  
  box-sizing: border-box;
}

html,
body,
app-root {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  display: block;
}

app-root {
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 36px;
  height: 20px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 3px;
  bottom: 2px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked+.slider {
  background-color: #2196F3;
}

input:focus+.slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked+.slider:before {
  transform: translateX(15px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.capitalize {
  text-transform: capitalize;
}

// Loader
.spinner {
  color: official;
  display: inline-block;
  position: relative;
  width: 22px;
  height: 22px;
  margin: 2px 0 0 2px;
}
.spinner div {
  transform-origin: 10px 10px;
  animation: spinner 1.2s linear infinite;
}
.spinner div:after {
  content: " ";
  display: block;
  position: absolute;
  top: 1px;
  left: 9px;
  width: 1px;
  height: 4px;
  border-radius: 20%;
  background: #fff;
}
.spinner div:nth-child(1) {
  transform: rotate(0deg);
  animation-delay: -1.1s;
}
.spinner div:nth-child(2) {
  transform: rotate(30deg);
  animation-delay: -1s;
}
.spinner div:nth-child(3) {
  transform: rotate(60deg);
  animation-delay: -0.9s;
}
.spinner div:nth-child(4) {
  transform: rotate(90deg);
  animation-delay: -0.8s;
}
.spinner div:nth-child(5) {
  transform: rotate(120deg);
  animation-delay: -0.7s;
}
.spinner div:nth-child(6) {
  transform: rotate(150deg);
  animation-delay: -0.6s;
}
.spinner div:nth-child(7) {
  transform: rotate(180deg);
  animation-delay: -0.5s;
}
.spinner div:nth-child(8) {
  transform: rotate(210deg);
  animation-delay: -0.4s;
}
.spinner div:nth-child(9) {
  transform: rotate(240deg);
  animation-delay: -0.3s;
}
.spinner div:nth-child(10) {
  transform: rotate(270deg);
  animation-delay: -0.2s;
}
.spinner div:nth-child(11) {
  transform: rotate(300deg);
  animation-delay: -0.1s;
}
.spinner div:nth-child(12) {
  transform: rotate(330deg);
  animation-delay: 0s;
}
@keyframes spinner {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}


// Themes (default is dark)

#body.theme--light {

  background-color: rgb(219, 219, 219);

  .title {
    color: rgb(24, 24, 24);
  }

  .spinner div:after {
    background: rgb(0, 0, 0);
  }

  // Preferences component
  app-preferences {

    .preferences-list {
      background-color: #cececeee;
      color: #424242;

    }

    .checkmark:after {
      border-color: rgb(0, 0, 0);
    }

    .preferences-entry {

      &:nth-child(even) {
        background-color: rgba(128, 128, 128, 0.103);
      }

      &:hover {
        background-color: rgba(128, 128, 128, 0.233);
      }
    }

    .preferences-group-entries {
      background-color: #b7b7b766;
    }

    .preferences-group-title-arrow {
     
      svg {
       
        fill: rgb(26, 26, 26);
      }
    }

  }

  app-typer {

    .word {
      color: rgba(26, 26, 26, 0.74);

      &.word-incorrect {
        color: #ff0000;
      }
    }

    .word-input {
      background: transparent;
      color: rgba(26, 26, 26, 0.74);
      caret-color: rgba(26, 26, 26, 0.74);

      &.input-incorrect {
        color: rgb(255, 94, 94);
      }
    }

    .type-test-results {
      background-color: rgba(77, 77, 77, 0.062);
      color: rgba(32, 32, 32, 0.582);

      tr {

        &:nth-child(even) {
          background-color: rgba(51, 51, 51, 0.07);
        }

      }
    }

    .type-test-timer {
      color: rgb(32, 32, 32);

      .type-test-timer-increase,
      .type-test-timer-decrease {

        svg {

          fill: rgb(48, 48, 48);
        }
      }
    }

    .type-test-restart {

      svg {

        fill: rgb(48, 48, 48);
      }

    }

  }
}
